# Generated by Django 3.2 on 2021-07-25 09:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LanguageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('ext', models.CharField(max_length=6)),
                ('description', models.TextField()),
                ('compile_command', models.CharField(blank=True, max_length=255)),
                ('run_command', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OJSettingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('value', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ProblemCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProblemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('shortname', models.CharField(max_length=32, unique=True)),
                ('fullname', models.CharField(max_length=255)),
                ('problem_type', models.IntegerField(choices=[(0, 'ACM'), (1, 'OI')], default=0)),
                ('difficult', models.FloatField(default=5.0)),
                ('hash_problem', models.CharField(blank=True, max_length=255)),
                ('author', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(blank=True, to='backend.ProblemCategoryModel')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_code', models.TextField()),
                ('submission_date', models.DateTimeField()),
                ('submission_judge_date', models.DateTimeField(blank=True, null=True)),
                ('compile_message', models.TextField(blank=True, null=True)),
                ('executed_time', models.IntegerField(blank=True, null=True)),
                ('memory_usage', models.IntegerField(blank=True, null=True)),
                ('points', models.FloatField(blank=True, null=True)),
                ('result', models.IntegerField(blank=True, choices=[(7, 'Dịch lỗi'), (0, 'Được chấp nhận'), (1, 'Kết quả sai'), (2, 'Chạy quá thời gian'), (3, 'Vượt quá bộ nhớ'), (4, 'Lỗi thực thi'), (5, 'Output Limit Exceed'), (6, 'Presentation Error')], null=True)),
                ('status', models.IntegerField(blank=True, choices=[(0, 'Đang đợi'), (1, 'Đang biên dịch'), (2, 'Đang chấm'), (3, 'Chấm xong')], null=True)),
                ('lastest_test', models.IntegerField(blank=True, null=True)),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.languagemodel')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.problemmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash_user_profile', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar', models.CharField(blank=True, max_length=255)),
                ('job', models.CharField(blank=True, max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionTestcaseResultModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('executed_time', models.IntegerField()),
                ('memory_usage', models.IntegerField()),
                ('points', models.FloatField()),
                ('checker_message', models.TextField(blank=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.submissionmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemTestCaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('time_limit', models.IntegerField(default=1000)),
                ('memory_limit', models.IntegerField(default=65536)),
                ('points', models.FloatField(default=1.0)),
                ('is_sample', models.BooleanField(default=False)),
                ('input_file', models.CharField(max_length=255, null=True)),
                ('output_file', models.CharField(max_length=255, null=True)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.problemmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemStatisticsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solvedCount', models.IntegerField(default=0)),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend.problemmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemSettingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_per_test', models.FloatField(default=1.0)),
                ('statement', models.TextField()),
                ('input_statement', models.TextField(null=True)),
                ('output_statement', models.TextField(null=True)),
                ('constraints_statement', models.TextField(null=True)),
                ('submission_visible_mode', models.IntegerField(choices=[(0, 'Ai cũng có thể xem được'), (1, 'Chỉ những người giải được'), (2, 'Chỉ mình tôi')], default=0)),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend.problemmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemGraderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_filename', models.CharField(max_length=32)),
                ('output_filename', models.CharField(max_length=32)),
                ('use_stdin', models.BooleanField(default=True)),
                ('use_stdout', models.BooleanField(default=True)),
                ('time_limit', models.IntegerField(default=1000)),
                ('memory_limit', models.IntegerField(default=65536)),
                ('use_checker', models.BooleanField(default=False)),
                ('checker', models.TextField(blank=True, default='')),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend.problemmodel')),
            ],
        ),
    ]
